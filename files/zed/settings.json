// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
//
// To see all of Zed's default settings without changing your
// custom settings, run the `open default settings` command
// from the command palette or from `Zed` application menu.
{
  "outline_panel": {
    "dock": "right"
  },
  "project_panel": {
    "dock": "left"
  },
  "collaboration_panel": { "button": false },
  "features": {
    "edit_prediction_provider": "none",
    "copilot": false
  },
  "agent": {
    "version": "2",
    "enabled": false,
    "button": false,
    "dock": null,
    "default_model": {
      "provider": "ollama",
      "model": "deepseek-r1:8b"
    }
  },
  "languages": {
    "GDScript": {
      "hard_tabs": true
    },
    "FSharp": {
      "format_on_save": "off"
    },
    "Nix": {
      "language_servers": ["nixd", "!nil"]
    }
  },
  "git": {
    "git_gutter": "tracked_files",
    "gutter_debounce": null,
    "inline_blame": {
      "enabled": true
    }
  },
  "vim_mode": true,
  "ui_font_size": 16,
  "buffer_font_size": 18,
  "buffer_line_height": { "custom": 1.2 },
  "theme": {
    "mode": "system",
    "light": "One Light",
    "dark": "Catppuccin Mocha (Blur)"
  },
  "buffer_font_family": "Iosevka",
  "buffer_font_weight": 400,
  "ui_font_family": "Noto Sans",
  "inlay_hints": {
    "enabled": false
  },
  "lsp": {
    "omnisharp": {
      "binary": {
        "path": "nix-shell",
        "arguments": [
          "-p",
          "omnisharp-roslyn",
          "dotnet-sdk",
          "--command",
          "OmniSharp -lsp"
        ]
      }
    },
    "rust-analyzer": {
      "binary": {
        "path": "nix-shell",
        "arguments": ["-p", "rust-analyzer", "--command", "rust-analyzer"]
      }
    },
    "zls": {
      "binary": {
        "path": "nix-shell",
        "arguments": ["-p", "zls", "--command", "zls"]
      }
    },
    "fsautocomplete": {
      "binary": {
        "path": "nix-shell",
        "arguments": ["-p", "fsautocomplete", "--command", "fsautocomplete"]
      }
    },
    "nixd": {
      "binary": {
        "path": "nix-shell",
        "arguments": ["-p", "nixd", "--command", "nixd"]
      }
    },
    "clangd": {
      "binary": {
        "path": "nix-shell",
        "arguments": ["-p", "clang-tools", "--command", "clangd"]
      }
    }
  },
  "diagnostics": {
    "include_warnings": true
  },
  "auto_install_extensions": {
    "catppuccin": true,
    "catppuccin-blur": true,
    "csharp": true,
    "emmet": true,
    "gdscript": true,
    "git-firefly": true,
    "html": true,
    "java": true,
    "lua": true,
    "svelte": true,
    "toml": true,
    "zig": true
  },
  "experimental.theme_overrides": {
    "warning.background": "#232634",
    "error.background": "#232634",
    "hint.background": "#232634",
    "background": "#1e1e2ee7",
    "title_bar.background": "#181926",
    "status_bar.background": "#181926",
    "tab_bar.background": "#1e1e2eff",
    "surface.background": "#00000000",
    "tab.active_background": "#313244",
    "scrollbar.thumb.background": "#b4befe1f",
    "scrollbar.thumb.active_background": "#b4befe3f",
    "scrollbar.thumb.hover_background": "#b4befe2f",
    "ghost_element.hover": "#3132447f",
    "ghost_element.selected": "#313244",
    "editor.active_line.background": "#313244",
    "terminal.background": "#181926d9",
    "panel.background": "#181926",
    "editor.line_number": "#45475a",
    "editor.active_line_number": "#b4befe",
    "element.active": "#b4befe"
  },
  "chat_panel": {
    "button": "never"
  },
  "soft_wrap": "editor_width"
}
